{"version":3,"file":"static/css/main.27b22fce.css","mappings":"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","sources":["index.css","scss/pages/_welcomePage.scss","scss/main.css","scss/forMediaQueries/_brakepoints.scss","scss/pages/_usersListPage.scss","scss/pages/_signUpPage.scss","scss/widgets/_form.scss","scss/widgets/_header.scss","scss/widgets/_userCard.scss","scss/shared/_button.scss","scss/shared/_image.scss","scss/shared/_input.scss","scss/shared/_inputRadio.scss","scss/shared/_preloader.scss","scss/shared/_allText.scss","scss/shared/_tooltip.scss","scss/shared/_upload.scss","scss/colorsGlobal/_colors.scss"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import \"../forMediaQueries/brakepoints\";\r\n\r\n.welcomePage_wrapper {\r\n  overflow: hidden;\r\n  position: relative;\r\n  min-height: 300px;\r\n  min-width: 340px;\r\n  width: 100%;\r\n  .backgroundImage {\r\n    background-image: url(\"../assets/image/background.jpeg\");\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: bottom;\r\n    object-fit: cover;\r\n    height: 650px;\r\n    min-height: 350px;\r\n    max-width: 1170px;\r\n    margin: auto;\r\n    filter: brightness(0.55) contrast(0.8);\r\n\r\n    @include media(\">phone\", \"<=tablet\") {\r\n      height: 500px;\r\n    }\r\n    @include media(\"<=phone\") {\r\n      height: 500px\r\n    }\r\n  }\r\n\r\n  .background {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    // set parent div for nested text.\r\n    .welcomePage {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 380px;\r\n      height: 100%;\r\n      margin: auto;\r\n      margin-top: 35px;\r\n      @include media(\"<=phone\") {\r\n        width: 330px;\r\n        margin-top: 18px;\r\n      }\r\n      @include media(\">phone\", \"<=tablet\") {\r\n        margin-top: 34px;\r\n      }\r\n    }\r\n    .Text {\r\n      margin-top: 20px;\r\n    }\r\n    .Button {\r\n      margin-top: 15px;\r\n      @include media(\">phone\", \"<=tablet\") {\r\n        margin-top: 16px;\r\n      }\r\n      @include media(\">desktop\", \"<=largeDesktop\") {\r\n        margin-top: 17px;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import url(\"https://fonts.googleapis.com/css2?family=Nunito&family=Nunito+Sans&display=swap\");\n.welcomePage_wrapper {\n  overflow: hidden;\n  position: relative;\n  min-height: 300px;\n  min-width: 340px;\n  width: 100%;\n}\n.welcomePage_wrapper .backgroundImage {\n  background-image: url(\"../assets/image/background.jpeg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: bottom;\n  -o-object-fit: cover;\n     object-fit: cover;\n  height: 650px;\n  min-height: 350px;\n  max-width: 1170px;\n  margin: auto;\n  filter: brightness(0.55) contrast(0.8);\n}\n@media (min-width: 658px) and (max-width: 900px) {\n  .welcomePage_wrapper .backgroundImage {\n    height: 500px;\n  }\n}\n@media (max-width: 657px) {\n  .welcomePage_wrapper .backgroundImage {\n    height: 500px;\n  }\n}\n.welcomePage_wrapper .background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n.welcomePage_wrapper .background .welcomePage {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 380px;\n  height: 100%;\n  margin: auto;\n  margin-top: 35px;\n}\n@media (max-width: 657px) {\n  .welcomePage_wrapper .background .welcomePage {\n    width: 330px;\n    margin-top: 18px;\n  }\n}\n@media (min-width: 658px) and (max-width: 900px) {\n  .welcomePage_wrapper .background .welcomePage {\n    margin-top: 34px;\n  }\n}\n.welcomePage_wrapper .background .Text {\n  margin-top: 20px;\n}\n.welcomePage_wrapper .background .Button {\n  margin-top: 15px;\n}\n@media (min-width: 658px) and (max-width: 900px) {\n  .welcomePage_wrapper .background .Button {\n    margin-top: 16px;\n  }\n}\n@media (min-width: 1171px) and (max-width: 2560px) {\n  .welcomePage_wrapper .background .Button {\n    margin-top: 17px;\n  }\n}\n\n.users_wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 135px;\n}\n.users_wrapper .Heading {\n  margin-top: 139px;\n  margin-bottom: 50px;\n}\n@media (min-width: 1171px) and (max-width: 2560px) {\n  .users_wrapper .Heading {\n    margin-bottom: 42px;\n  }\n}\n@media (min-width: 658px) and (max-width: 900px) {\n  .users_wrapper .Heading {\n    margin-bottom: 40px;\n  }\n}\n@media (max-width: 657px) {\n  .users_wrapper .Heading {\n    width: 330px;\n    margin-bottom: 43px;\n  }\n}\n.users_wrapper .Button {\n  width: 120px;\n}\n.users_wrapper .users_stack {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 29px 30px;\n  margin-bottom: 45px;\n}\n@media (max-width: 657px) {\n  .users_wrapper .users_stack {\n    grid-template-columns: 1fr;\n    grid-gap: 21px;\n    margin-bottom: 42px;\n    margin-top: 5px;\n  }\n}\n@media (min-width: 658px) and (max-width: 900px) {\n  .users_wrapper .users_stack {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 16px 80px;\n    margin-bottom: 44px;\n    margin-top: 10px;\n  }\n}\n@media (min-width: 1171px) and (max-width: 2560px) {\n  .users_wrapper .users_stack {\n    grid-gap: 29px 120px;\n    margin-bottom: 44px;\n    margin-top: 10px;\n  }\n}\n\n.signUp_wrapper {\n  margin: 10px;\n}\n.signUp_wrapper .success_wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.signUp_wrapper .success_wrapper img {\n  margin: 40px;\n}\n\n.form_wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n}\n@media (max-width: 657px) {\n  .form_wrapper {\n    width: 330px;\n  }\n}\n.form_wrapper .Text {\n  margin-top: 15px;\n  width: 100%;\n  text-align: left;\n  margin-bottom: 10px;\n}\n.form_wrapper .form_btn {\n  margin-top: 28px;\n}\n\n.welcomePage_navBar {\n  margin: 8px auto;\n  display: flex;\n  justify-content: space-between;\n  max-width: 1170px;\n}\n.welcomePage_navBar .Button {\n  margin-left: 10px;\n}\n.welcomePage_navBar img {\n  margin-left: 1px;\n}\n.welcomePage_navBar .welcomePage_navBar_buttons {\n  display: flex;\n  z-index: 1;\n}\n@media (min-width: 1171px) and (max-width: 2560px) {\n  .welcomePage_navBar {\n    margin: 8px auto;\n  }\n  .welcomePage_navBar img {\n    margin-left: 0px;\n  }\n}\n@media (min-width: 901px) and (max-width: 1170px) {\n  .welcomePage_navBar {\n    margin: 8px 59px;\n  }\n}\n@media (min-width: 658px) and (max-width: 900px) {\n  .welcomePage_navBar {\n    margin: 8px 31px;\n  }\n}\n@media (max-width: 657px) {\n  .welcomePage_navBar {\n    margin: 8px 15px;\n  }\n}\n\n.user_wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 240px;\n  margin: 20px;\n  overflow: hidden;\n}\n.user_wrapper .user_name {\n  margin-bottom: 20px;\n}\n.user_wrapper .ellipsis {\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  cursor: default;\n}\n\n.Button {\n  margin: 5px 0;\n  width: 100px;\n  height: 34px;\n  border-radius: 25px;\n  border: none;\n  cursor: pointer;\n}\n.Button:hover {\n  background-color: #ffe100;\n}\n.Button:disabled {\n  background-color: #b4b4b4;\n  color: white;\n  cursor: auto;\n}\n\n.user_photo {\n  height: 70px;\n  width: 70px;\n  border-radius: 50%;\n  margin-bottom: 20px;\n}\n\n.Input_wrap {\n  width: 100%;\n  margin-top: 50px;\n  position: relative;\n}\n.Input_wrap input {\n  width: 100%;\n  height: 55px;\n  border-radius: 5px;\n  border: 1px solid rgb(170, 170, 170);\n  box-sizing: border-box;\n  padding: 0 15px;\n}\n.Input_wrap input::-moz-placeholder {\n  text-align: left;\n  margin-left: 0px;\n  color: rgb(170, 170, 170);\n}\n.Input_wrap input::placeholder {\n  text-align: left;\n  margin-left: 0px;\n  color: rgb(170, 170, 170);\n}\n.Input_wrap .Input_label {\n  position: absolute;\n  font-size: small;\n  background-color: rgb(255, 255, 255);\n  top: -13px;\n  left: 29px;\n  padding: 0 4px;\n}\n\n.inputRadio_stack {\n  height: 130px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  min-width: 300px;\n}\n.inputRadio_stack .inputRadio_wrapper {\n  display: flex;\n  position: relative;\n  padding-left: 32px;\n  align-items: center;\n}\n.inputRadio_stack .inputRadio_wrapper input {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  left: -6px;\n  top: 0;\n  accent-color: #05a3b4;\n}\n.inputRadio_stack .inputRadio_wrapper .Text {\n  color: rgb(0, 17, 255);\n  margin: 0;\n}\n\n.lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 40px;\n  height: 40px;\n  margin: 7px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 32px;\n  height: 32px;\n  margin: 4px;\n  border: 4px solid #ffffff;\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #00bdd3 transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\nbody {\n  font-family: \"Nunito\", sans-serif;\n  font-size: 16px;\n  line-height: 26px;\n}\n\n.Text_font__normal {\n  font-family: \"Nunito\";\n  font-size: 16px;\n  line-height: 26px;\n  text-align: center;\n}\n\n.Heading_font__normal {\n  margin: 0;\n  font-family: \"Nunito\";\n  font-size: 40px;\n  line-height: 40px;\n  text-align: center;\n}\n\n.text_error {\n  color: red;\n  font-size: small;\n}\n\n.text_helper {\n  color: rgb(170, 170, 170);\n  font-size: small;\n}\n\n.tooltip_wrapper {\n  width: 100%;\n}\n.tooltip_wrapper .tooltip {\n  margin-left: 60px;\n  height: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.DownloadFile_wrap {\n  width: 100%;\n  box-sizing: \"border-box\";\n  margin-top: 41px;\n  margin-bottom: 17px;\n}\n.DownloadFile_wrap .DownloadFile {\n  display: grid;\n  grid-template-areas: \"a b\";\n  grid-template-columns: 82px 1fr;\n  width: 100%;\n  height: 55px;\n}\n.DownloadFile_wrap .DownloadFile label {\n  grid-area: \"a\";\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid black;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n}\n.DownloadFile_wrap .DownloadFile .upload_status {\n  grid-area: \"b\";\n  display: flex;\n  align-items: center;\n  padding: 0 17px;\n  border-top: 1px solid rgb(170, 170, 170);\n  border-right: 1px solid rgb(170, 170, 170);\n  border-bottom: 1px solid rgb(170, 170, 170);\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  color: rgb(170, 170, 170);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.DownloadFile_wrap .DownloadFile input {\n  display: none;\n}\n\n.yellow {\n  background-color: #f4e041;\n}\n\n.blue {\n  background-color: #00bdd3;\n}\n\n.lightGray {\n  background-color: #f8f8f8;\n}\n\n.white {\n  color: white;\n}\n\nbody {\n  background-color: #f8f8f8;\n}/*# sourceMappingURL=main.css.map */","//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v2.0.0\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Kitty Giraudel (@kittygiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n@charset \"UTF-8\";\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n@use \"sass:math\";\r\n@use \"sass:map\";\r\n@use \"sass:list\";\r\n@use \"sass:string\";\r\n@use \"sass:meta\";\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  \"phone\": 657px,\r\n  \"tablet\": 900px,\r\n  \"desktop\": 1170px,\r\n  \"largeDesktop\": 2560px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"landscape\": \"(orientation: landscape)\",\r\n  \"portrait\": \"(orientation: portrait)\",\r\n  \"retina2x\":\r\n    \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\r\n  \"retina3x\":\r\n    \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1,\r\n  \"\": 0,\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: \"desktop\" !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if meta.feature-exists(\"at-error\") {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {\r\n  }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\r\n    }\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map.has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\r\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\r\n      {\r\n        @return false;\r\n      }\r\n    } @else if not list.index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\r\n    @if string.index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log(\"No operator found in `#{$expression}`.\");\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: string.index($expression, $operator);\r\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\r\n  $parsed-dimension: str-trim($parsed-dimension);\r\n  $dimension: \"width\";\r\n\r\n  @if string.length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(list.index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: string.index($expression, $operator);\r\n  $value: string.slice($expression, $operator-index + string.length($operator));\r\n  $trimmedValue: str-trim($value);\r\n\r\n  @if map.has-key($breakpoints, $trimmedValue) {\r\n    $value: map.get($breakpoints, $trimmedValue);\r\n  } @else {\r\n    $value: to-number($trimmedValue);\r\n  }\r\n\r\n  $interval: map.get($unit-intervals, math.unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log(\"Unknown unit `#{math.unit($value)}`.\");\r\n  }\r\n\r\n  @if $operator == \">\" {\r\n    $value: $value + $interval;\r\n  } @else if $operator == \"<\" {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map.has-key($media-expressions, $expression) {\r\n    @return map.get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: list.length($list)) {\r\n  @if list.length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: list.append($result, list.nth($list, $i), comma);\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n\r\n@function to-number($value) {\r\n  @if meta.type-of($value) == \"number\" {\r\n    @return $value;\r\n  } @else if meta.type-of($value) != \"string\" {\r\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\r\n  }\r\n\r\n  $first-character: string.slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == \"-\");\r\n  $numbers: (\r\n    \"0\": 0,\r\n    \"1\": 1,\r\n    \"2\": 2,\r\n    \"3\": 3,\r\n    \"4\": 4,\r\n    \"5\": 5,\r\n    \"6\": 6,\r\n    \"7\": 7,\r\n    \"8\": 8,\r\n    \"9\": 9,\r\n  );\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == \"+\" or $first-character == \"-\") {\r\n    $value: string.slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through string.length($value) {\r\n    $character: string.slice($value, $i, $i);\r\n\r\n    @if not(list.index(map.keys($numbers), $character) or $character == \".\") {\r\n      @return to-length(\r\n        if($minus, -$result, $result),\r\n        string.slice($value, $i)\r\n      );\r\n    }\r\n\r\n    @if $character == \".\" {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map.get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + math.div(map.get($numbers, $character), $digits);\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: (\r\n    \"px\": 1px,\r\n    \"cm\": 1cm,\r\n    \"mm\": 1mm,\r\n    \"%\": 1%,\r\n    \"ch\": 1ch,\r\n    \"pc\": 1pc,\r\n    \"in\": 1in,\r\n    \"em\": 1em,\r\n    \"rem\": 1rem,\r\n    \"pt\": 1pt,\r\n    \"ex\": 1ex,\r\n    \"vw\": 1vw,\r\n    \"vh\": 1vh,\r\n    \"vmin\": 1vmin,\r\n    \"vmax\": 1vmax,\r\n  );\r\n\r\n  @if not list.index(map.keys($units), $unit) {\r\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\r\n  }\r\n\r\n  @return $value * map.get($units, $unit);\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Jack McNicol\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Trims a string of leading and trailing spaces\r\n///\r\n/// @param {String} $string - Value to be trimmed\r\n///\r\n/// @return {String}\r\n///\r\n\r\n@function str-trim($string) {\r\n  @if (str-slice($string, 1, 1) == \" \") {\r\n    @return str-trim(str-slice($string, 2));\r\n  } @else if (str-slice($string, str-length($string), -1) == \" \") {\r\n    @return str-trim(str-slice($string, 1, -2));\r\n  } @else {\r\n    @return $string;\r\n  }\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map.merge(\r\n    $media-expressions,\r\n    $tweak-media-expressions\r\n  ) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and list.length($conditions) == 0) or\r\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n  {\r\n    @content;\r\n  } @else if ($im-media-support and list.length($conditions) > 0) {\r\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\r\n      // Recursive call\r\n      $sliced-conditions: slice($conditions, 2);\r\n      @include media($sliced-conditions...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import \"../forMediaQueries/brakepoints\";\r\n\r\n.users_wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 135px;\r\n  .Heading {\r\n    margin-top: 139px;\r\n    margin-bottom: 50px;\r\n    @include media(\">desktop\", \"<=largeDesktop\") {\r\n      margin-bottom: 42px;\r\n    }\r\n    @include media(\">phone\", \"<=tablet\") {\r\n      margin-bottom: 40px;\r\n    }\r\n    @include media(\"<=phone\") {\r\n      width: 330px;\r\n      margin-bottom: 43px;\r\n    }\r\n  }\r\n  .Button {\r\n    width: 120px;\r\n  }\r\n  .users_stack {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 29px 30px;\r\n    margin-bottom: 45px;\r\n\r\n    @include media(\"<=phone\") {\r\n      grid-template-columns: 1fr;\r\n      grid-gap: 21px;\r\n      margin-bottom: 42px;\r\n      margin-top: 5px;\r\n    }\r\n    @include media(\">phone\", \"<=tablet\") {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      grid-gap: 16px 80px;\r\n      margin-bottom: 44px;\r\n      margin-top: 10px;\r\n    }\r\n    @include media(\">desktop\", \"<=largeDesktop\") {\r\n      grid-gap: 29px 120px;\r\n      margin-bottom: 44px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n",".signUp_wrapper {\r\n  margin: 10px;\r\n\r\n  .success_wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    img {\r\n      margin: 40px;\r\n    }\r\n  }\r\n}\r\n",".form_wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 380px;\r\n  margin: 0 auto;\r\n  margin-bottom: 50px;\r\n\r\n  @include media(\"<=phone\") {\r\n    width: 330px;\r\n  }\r\n\r\n  .Text {\r\n    margin-top: 15px;\r\n    width: 100%;\r\n    text-align: left;\r\n    margin-bottom: 10px;\r\n  }\r\n  .form_btn {\r\n    margin-top: 28px;\r\n  }\r\n}\r\n",".welcomePage_navBar {\r\n  margin: 8px auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 1170px;\r\n  .Button {\r\n    margin-left: 10px;\r\n  }\r\n  img {\r\n    margin-left: 1px;\r\n  }\r\n  .welcomePage_navBar_buttons {\r\n    display: flex;\r\n    z-index: 1;\r\n  }\r\n\r\n  @include media(\">desktop\", \"<=largeDesktop\") {\r\n    margin: 8px auto;\r\n    img {\r\n      margin-left: 0px;\r\n    }\r\n  }\r\n  @include media(\">tablet\", \"<=desktop\") {\r\n    margin: 8px 59px;\r\n  }\r\n  @include media(\">phone\", \"<=tablet\") {\r\n    margin: 8px 31px;\r\n  }\r\n  @include media(\"<=phone\") {\r\n    margin: 8px 15px;\r\n  }\r\n}\r\n",".user_wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 240px;\r\n  margin: 20px;\r\n  overflow: hidden;\r\n  .user_name {\r\n    margin-bottom: 20px;\r\n  }\r\n  .ellipsis {\r\n    text-align: center;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    cursor: default;\r\n  }\r\n}\r\n",".Button {\r\n  margin: 5px 0;\r\n  width: 100px;\r\n  height: 34px;\r\n  border-radius: 25px;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #ffe100;\r\n  }\r\n  &:disabled {\r\n    background-color: #b4b4b4;\r\n    color: white;\r\n    cursor: auto;\r\n  }\r\n}\r\n",".user_photo {\r\n  height: 70px;\r\n  width: 70px;\r\n  border-radius: 50%;\r\n  margin-bottom: 20px;\r\n}\r\n//making user photo round",".Input_wrap {\r\n  width:100%;\r\n  margin-top: 50px;\r\n  position: relative;\r\n  input {\r\n    width: 100%;\r\n    height: 55px;\r\n    border-radius: 5px;\r\n    border: 1px solid rgb(170, 170, 170);\r\n    box-sizing: border-box;\r\n    padding: 0 15px;\r\n    &::placeholder {\r\n      text-align: left;\r\n      margin-left: 0px;\r\n      color: rgb(170, 170, 170);\r\n    }\r\n  }\r\n\r\n  .Input_label {\r\n    position: absolute;\r\n    font-size: small;\r\n    background-color: rgb(255, 255, 255);\r\n    top: -13px;\r\n    left: 29px;\r\n    padding: 0 4px;\r\n  }\r\n}\r\n\r\n",".inputRadio_stack {\r\n  height: 130px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  min-width: 300px;\r\n\r\n  .inputRadio_wrapper {\r\n    display: flex;\r\n    position: relative;\r\n    padding-left: 32px;\r\n    align-items: center;\r\n\r\n    input {\r\n      height: 20px;\r\n      width: 20px;\r\n      position: absolute;\r\n      left: -6px;\r\n      top: 0;\r\n      accent-color: #05a3b4;\r\n    }\r\n\r\n    .Text {\r\n      color: rgb(0, 17, 255);\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n",".lds-ring {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 7px;\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: 32px;\r\n    height: 32px;\r\n    margin: 4px;\r\n    border: 4px solid #ffffff;\r\n    border-radius: 50%;\r\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: #00bdd3 transparent transparent transparent;\r\n    &:nth-child(1) {\r\n      animation-delay: -0.45s;\r\n    }\r\n    &:nth-child(2) {\r\n      animation-delay: -0.3s;\r\n    }\r\n    &:nth-child(3) {\r\n      animation-delay: -0.15s;\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes lds-ring {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n// animating preloader","@import url(\"https://fonts.googleapis.com/css2?family=Nunito&family=Nunito+Sans&display=swap\");\r\n// Nunito font. regular 400\r\nbody {\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 16px;\r\n  line-height: 26px;\r\n}\r\n// adding standart font for all app\r\n.Text_font__normal {\r\n  font-family: \"Nunito\";\r\n  font-size: 16px;\r\n  line-height: 26px;\r\n  text-align: center;\r\n}\r\n//style for common text\r\n\r\n.Heading_font__normal {\r\n  margin: 0;\r\n  font-family: \"Nunito\";\r\n  font-size: 40px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n}\r\n//style for heading\r\n.text_error {\r\n  color: red;\r\n  font-size: small;\r\n}\r\n// style for errors\r\n.text_helper {\r\n  color: rgb(170, 170, 170);\r\n  font-size: small;\r\n}\r\n// style for helper text\r\n",".tooltip_wrapper {\r\n  width: 100%;\r\n  .tooltip {\r\n    margin-left: 60px;\r\n    height: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n}\r\n",".DownloadFile_wrap {\r\n  width: 100%;\r\n  box-sizing: \"border-box\";\r\n  margin-top: 41px;\r\n  margin-bottom: 17px;\r\n\r\n  .DownloadFile {\r\n    display: grid;\r\n    grid-template-areas: \"a b\";\r\n    grid-template-columns: 82px 1fr;\r\n    width: 100%;\r\n    height: 55px;\r\n\r\n    label {\r\n      grid-area: \"a\";\r\n      cursor: pointer;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border: 1px solid black;\r\n      border-top-left-radius: 5px;\r\n      border-bottom-left-radius: 5px;\r\n    }\r\n    // replacing default input by this label\r\n\r\n    .upload_status {\r\n      grid-area: \"b\";\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0 17px;\r\n      border-top: 1px solid rgb(170, 170, 170);\r\n      border-right: 1px solid rgb(170, 170, 170);\r\n      border-bottom: 1px solid rgb(170, 170, 170);\r\n      border-top-right-radius: 5px;\r\n      border-bottom-right-radius: 5px;\r\n      color: rgb(170, 170, 170);\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n    // status of uploads\r\n    input {\r\n      display: none;\r\n    }\r\n    // hide default appearance\r\n  }\r\n}\r\n",".yellow {\r\n  background-color: #f4e041;\r\n}\r\n.blue {\r\n  background-color: #00bdd3;\r\n}\r\n.lightGray {\r\n  background-color: #f8f8f8;\r\n}\r\n.white {\r\n  color: white;\r\n}\r\nbody {\r\n  background-color: #f8f8f8;\r\n}\r\n"],"names":[],"sourceRoot":""}